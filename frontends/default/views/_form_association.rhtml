<%
=begin
* need to begin restricting. don't display empty form for full associations. optionally don't allow already-associated objects to be reassociated.

TODO
don't display "create" without create permissions
don't display existing without update permissions (or rather, just use ui_type => :select)
contextual error display (tough)

=end
%>
<%
parent_record = @record
associated = column.singular_association? ? [parent_record.send(column.name) || column.association.klass.new] : parent_record.send(column.name).sort_by {|r| r.id}
-%>
<h5><%= column.label -%></h5>
<table cellpadding="0" cellspacing="0">
  <% @record = column.association.klass.new -%>
  <%= render :partial => 'form_association_header', :locals => {:parent_record => parent_record} %>

  <tbody id="<%= sub_form_list_id(:association => column.name) %>">
    <% associated.each_index do |index| %>
    <% @record = associated[index] -%>
    <tr class="association-record">
      <%= render :partial => 'form_association_record', :locals => {:scope => "[#{column.name}][#{@record.id}]", :parent_record => parent_record} %>
    </tr>
    <% end -%>

    <% if column.plural_association? -%>
    <%# Always keep one open new form -%>
    <% @record = column.association.klass.new -%>
    <tr class="association-record association-record-new locked">
      <%= render :partial => 'form_association_record', :locals => {:scope => "[#{column.name}][#{generate_temporary_id}]", :parent_record => parent_record} %>
    </tr>
    <% end -%>
  </tbody>
</table>

<%= link_to_remote 'Create Another', :url => {:action => 'edit_associated', :id => parent_record.id, :association => column.name} -%>
&nbsp;|&nbsp;
<%= select_tag 'associated_id', '<option value=""></option>' + options_for_select(options_for_association(column.association)) %>
<%= button_to_function 'Add Existing', "new Ajax.Request(#{url_for(:action => 'edit_associated', :id => parent_record.id, :association => column.name, :associated_id => '--ID--', :_method => :get).to_json}.sub('--ID--', Element.previous(this).value), {asynchronous: true, evalScripts: true})" %>
<% @record = parent_record -%>