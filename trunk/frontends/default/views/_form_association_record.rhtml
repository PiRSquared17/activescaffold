<% association ||= @association # Actual AssociationReflection object from the parent record -%>
<% record ||= @record # ActiveRecord object for this association -%>
<tr>
  <%# TODO Move to using a dedicated 'sublist' module that inherits from list %>
  <% active_scaffold_config_for(record.class).list.columns.each do |column| %>
		<% next if !column.association.nil? and column.association.primary_key_name == association.primary_key_name %>
    <% column_value = render_column(record, column) -%>
    <td class="<%= column_class(column, column_value) %>" >
      <%= column_value %>
    </td>
  <% end -%>
  <td>
    <%= link_to_function _('DELETE'), "Element.remove(this.parentNode.parentNode);" %>

    <% scope = [ "record", association.name.to_s ] -%>
    <% scope << "#{generate_temporary_id}" unless [:has_one, :belongs_to].include?(association.macro) -%>
    <% record_params = record.id.nil? ? params[record.class.to_s.underscore] : { :id => record.id } -%>
    <%= params_to_input_tags(record_params, scope) %>
  </td>
</tr>